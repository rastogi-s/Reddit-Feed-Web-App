{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/components/footer/footer.component.css","webpack:///./src/app/components/footer/footer.component.html","webpack:///./src/app/components/footer/footer.component.ts","webpack:///./src/app/components/my-reddit-home/my-reddit-home.component.css","webpack:///./src/app/components/my-reddit-home/my-reddit-home.component.html","webpack:///./src/app/components/my-reddit-home/my-reddit-home.component.ts","webpack:///./src/app/components/navbar/navbar.component.css","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/components/subreddit-listing/subreddit-listing.component.css","webpack:///./src/app/components/subreddit-listing/subreddit-listing.component.html","webpack:///./src/app/components/subreddit-listing/subreddit-listing.component.ts","webpack:///./src/app/services/subreddit-service.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".cont {\\r\\n  padding-left:20px;\\r\\n  padding-right:20px;\\r\\n  margin-top: 130px;\\r\\n  height: 100%;\\r\\n  margin-bottom: 110px;\\r\\n}\\r\\n\"","module.exports = \"<app-navbar></app-navbar>\\r\\n<div class=\\\"cont\\\">\\r\\n  <router-outlet></router-outlet>\\r\\n</div>\\r\\n<app-footer></app-footer>\\r\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {routing} from './app.routing';\nimport { AppComponent } from './app.component';\nimport { SubredditListingComponent } from './components/subreddit-listing/subreddit-listing.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { FooterComponent } from './components/footer/footer.component';\nimport { MyRedditHomeComponent } from './components/my-reddit-home/my-reddit-home.component';\nimport {FormsModule} from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SubredditListingComponent,\n    NavbarComponent,\n    FooterComponent,\n    MyRedditHomeComponent\n  ],\n  imports: [\n    FormsModule,\n    BrowserModule,\n    routing\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {RouterModule, Routes} from '@angular/router';\nimport {MyRedditHomeComponent} from './components/my-reddit-home/my-reddit-home.component';\nimport {SubredditListingComponent} from './components/subreddit-listing/subreddit-listing.component';\n\nconst appRoutes: Routes = [\n  {path: '', redirectTo: 'home', pathMatch: 'full'},\n  {path: 'home', component: MyRedditHomeComponent},\n  {path: 'subreddit/:topic', component: SubredditListingComponent},\n  {path: '**', component: MyRedditHomeComponent} // last\n];\nexport const routing = RouterModule.forRoot(appRoutes);\n","module.exports = \"\\r\\n.footer {\\r\\n  /*position: absolute;*/\\r\\n  bottom: 0;\\r\\n  width: 100%;\\r\\n  /* Set the fixed height of the footer here */\\r\\n  height: 70px;\\r\\n  line-height: 60px; /* Vertically center the text there */\\r\\n  /*background-color: #f5f5f5;*/\\r\\n  background-image:url('joanna-kosinska-439234-unsplash.jpg');\\r\\n  background-size: cover;\\r\\n}\\r\\n\\r\\n.footer > .container {\\r\\n  padding-right: 15px;\\r\\n  padding-left: 15px;\\r\\n  text-align: center;\\r\\n  -webkit-text-decoration: whitesmoke;\\r\\n          text-decoration: whitesmoke;\\r\\n}\\r\\n\"","module.exports = \"<footer class=\\\"footer fixed-bottom bg-dark \\\">\\n  <div class=\\\"container text-light\\\">\\n\\n  </div>\\n</footer>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".hero{\\r\\n  background-image: url('photo-1527049979667-990f1d0d8e7f.jpg');\\r\\n  background-size: contain;\\r\\n  padding: 75px;\\r\\n}\\r\\n\"","module.exports = \"<div>\\r\\n  <div class=\\\"position-relative overflow-hidden text-center bg-dark text-light hero\\\">\\r\\n    <div class=\\\"col-md-5 p-lg-5 mx-auto my-5\\\">\\r\\n      <h1 class=\\\"display-4 font-weight-normal\\\">FIND REDDITS</h1>\\r\\n      <p class=\\\"lead font-weight-normal\\\">Search here about any topic</p>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col\\\">\\r\\n          <div class=\\\"input-group mb-3\\\">\\r\\n            <div class=\\\"input-group-prepend\\\">\\r\\n              <span class=\\\"input-group-text\\\" id=\\\"\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n            </div>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Subreddit\\\" aria-label=\\\"Subreddit\\\"\\r\\n                   aria-describedby=\\\"basic-addon1\\\" [(ngModel)]=\\\"topic\\\"\\r\\n                   name=\\\"topic\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <button class=\\\"btn btn-light w-25\\\"\\r\\n              routerLink=\\\"/subreddit/{{topic!='' && topic!=null ? topic:' '}}\\\">Search\\r\\n      </button>\\r\\n    </div>\\r\\n    <div class=\\\"product-device box-shadow d-none d-md-block\\\"></div>\\r\\n    <div class=\\\"product-device product-device-2 box-shadow d-none d-md-block\\\"></div>\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n\"","import {Component, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-my-reddit-home',\n  templateUrl: './my-reddit-home.component.html',\n  styleUrls: ['./my-reddit-home.component.css']\n})\nexport class MyRedditHomeComponent implements OnInit {\n\n  topic: string;\n\n  constructor(private router: Router) {\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\r\\n.title {\\r\\n  font-family: \\\"Fira Code Retina\\\";\\r\\n  font-size: 50px;\\r\\n  font-weight: bold;\\r\\n  color:black;\\r\\n}\\r\\n\\r\\n.nav-link {\\r\\n  font-family: \\\"Arial\\\";\\r\\n  font-size: large;\\r\\n\\r\\n}\\r\\n\\r\\n.background{\\r\\n  background-image:url('joanna-kosinska-439234-unsplash.jpg');\\r\\n  background-size: cover;\\r\\n}\\r\\n\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg  fixed-top navbar-light background\\\">\\n\\n  <a class=\\\"navbar-brand \\\" href=\\\"#\\\"><i class=\\\"fa fa-registered fa-4x\\\"></i></a>\\n  <a class=\\\"navbar-brand \\\" href=\\\"#\\\"><h1 class=\\\"title\\\">MyReddit</h1></a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarCollapse\\\"\\n          aria-controls=\\\"navbarCollapse\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarCollapse\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item my-1\\\">\\n        <a class=\\\"btn btn-light font-weight-light ml-3\\\" [routerLinkActive]=\\\"['active']\\\" routerLink=\\\"/home\\\" >Home </a>\\n        <!--<span class=\\\"sr-only\\\">(current)</span>-->\\n      </li>\\n\\n    </ul>\\n    <!--<form class=\\\"form-inline\\\">-->\\n      <!--<input class=\\\"form-control mr-sm-2\\\" type=\\\"search\\\" placeholder=\\\"Search Subreddit\\\" aria-label=\\\"Search\\\">-->\\n      <!--<button class=\\\"btn btn-light font-weight-dark ml-3\\\" type=\\\"submit\\\">Search</button>-->\\n    <!--</form>-->\\n\\n  </div>\\n</nav>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"/*.active.joblist {*/\\r\\n  /*background-color: rgba(0, 170, 255, 0.65);*/\\r\\n  /*border-top-color: whitesmoke;*/\\r\\n  /*border-bottom-color: rgba(0, 170, 255, 0);*/\\r\\n  /*border-right-color: rgba(0, 170, 255, 0.02);*/\\r\\n  /*border-left-color: rgba(0, 170, 255, 0.02);*/\\r\\n  /*!*border-color: rgba(0, 170, 255, 0.65);*!*/\\r\\n  /*}*/\\r\\n  /*.active.joblist a {*/\\r\\n  /*color: white;*/\\r\\n  /*}*/\\r\\n  .background-pic{\\r\\n  background-image: url('photo-1527049979667-990f1d0d8e7f.jpg');\\r\\n  background-size: contain;\\r\\n}\\r\\n  .heading{\\r\\n\\r\\n  font-family: \\\"Bookman Old Style\\\";\\r\\n  /*background-color: rgba(15, 15, 15 ,0.6);*/\\r\\n\\r\\n}\\r\\n\\r\\n\\r\\n\"","module.exports = \"<div class=\\\"rounded bg-light p-5 background-pic\\\">\\n  <h1 class=\\\" text-center text-light rounded shadow p-2 mb-4 heading \\\">Listings for {{topic}}\\n  </h1>\\n  <div class=\\\"alert alert-danger\\\" [hidden]=\\\"toggleError\\\">\\n    {{error}}\\n  </div>\\n\\n\\n  <nav class=\\\"navbar navbar-light justify-content-between mb-3\\\">\\n\\n    <a class=\\\"btn\\\" [hidden]=\\\"leftPage\\\" (click)=\\\"fetchListing()\\\"> <i\\n      class=\\\"fas fa-arrow-circle-left fa-3x text-white\\\"></i></a>\\n    <div class=\\\"dropdown\\\">\\n      <button class=\\\"btn btn-secondary dropdown-toggle \\\" type=\\\"button\\\" id=\\\"dropdownMenuButton\\\" data-toggle=\\\"dropdown\\\"\\n              aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n        {{timeString}}\\n      </button>\\n      <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenuButton\\\">\\n        <a class=\\\"dropdown-item btn\\\" (click)=\\\"fetchListing(topic,'hour'); timeString='Past hour'\\\">Past Hour</a>\\n        <a class=\\\"dropdown-item btn\\\" (click)=\\\"fetchListing(topic,'day'); timeString='Past 24 Hours'\\\">Past 24\\n          Hours</a>\\n        <a class=\\\"dropdown-item btn\\\" (click)=\\\"fetchListing(topic,'month'); timeString='Past Month'\\\">Past Month</a>\\n        <a class=\\\"dropdown-item btn\\\" (click)=\\\"fetchListing(topic,'week'); timeString='Past Week'\\\">Past Week</a>\\n        <a class=\\\"dropdown-item btn\\\" (click)=\\\"fetchListing(topic,'year'); timeString='Past year'\\\">Past Year</a>\\n        <a class=\\\"dropdown-item btn\\\" (click)=\\\"fetchListing(topic,'all'); timeString='Of All Time'\\\">Of All Time</a>\\n      </div>\\n    </div>\\n    <button class=\\\"btn bg-transparent\\\"></button>\\n    <button class=\\\"btn bg-transparent\\\"></button>\\n    <button class=\\\"btn bg-transparent\\\"></button>\\n    <button class=\\\"btn bg-transparent\\\"></button>\\n    <button class=\\\"btn bg-transparent\\\"></button>\\n    <button class=\\\"btn bg-transparent\\\"></button>\\n    <button class=\\\"btn bg-transparent\\\"></button>\\n    <button class=\\\"btn bg-transparent\\\"></button>\\n    <form class=\\\"form-inline\\\">\\n      <input class=\\\"form-control mr-sm-2\\\" type=\\\"search\\\" [(ngModel)]=\\\"searchTopic\\\" placeholder=\\\"Search\\\"\\n             [ngModelOptions]=\\\"{standalone: true}\\\"\\n             aria-label=\\\"Search\\\">\\n      <button class=\\\"btn btn-success my-2 my-sm-0\\\" type=\\\"button\\\" (click)=\\\"fetchListing(searchTopic,listingTime)\\\">\\n        Search\\n      </button>\\n    </form>\\n    <a class=\\\"btn\\\" [hidden]=\\\"rightPage\\\" (click)=\\\"fetchListing(topic,listingTime, afterName)\\\"><i\\n      class=\\\"fas fa-arrow-circle-right fa-3x text-white\\\"></i></a>\\n  </nav>\\n  <ul class=\\\"list-group\\\">\\n    <li *ngFor=\\\"let reddit of listings\\\"\\n        class=\\\"list-group-item bg-light my-2 rounded shadow-sm\\\">\\n      <div>\\n        <div class=\\\"row text-dark\\\">\\n          <div class=\\\"col-8\\\">\\n            <h5 style=\\\"color: rgba(0,123,255,0.85);\\\">\\n              <a href={{reddit.url}}>{{reddit.title}}</a></h5>\\n          </div>\\n          <div class=\\\"col-4\\\" style=\\\"text-align: right\\\">\\n            <i class=\\\"fa  fa-thumbs-up\\\">&nbsp; {{reddit.ups}}</i> <br>\\n            <i class=\\\"fa  fa-comments\\\">&nbsp; {{reddit.num_comments}}</i>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-8\\\">\\n            <small>Posted By : {{reddit.author}}</small>\\n          </div>\\n          <div class=\\\"col-4\\\" style=\\\"text-align: right\\\">\\n            <small>Posted on: {{ reddit.created}}</small>\\n          </div>\\n        </div>\\n      </div>\\n\\n\\n    </li>\\n  </ul>\\n</div>\\n<app-footer></app-footer>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {SubredditServiceService} from '../../services/subreddit-service.service';\n\n@Component({\n  selector: 'app-subreddit-listing',\n  templateUrl: './subreddit-listing.component.html',\n  styleUrls: ['./subreddit-listing.component.css']\n})\nexport class SubredditListingComponent implements OnInit {\n\n  listings = [];\n  error: string;\n  toggleError: boolean;\n  listingTime: string;\n  timeString: string;\n  topic: string;\n  searchTopic: string;\n  leftPage: boolean;\n  rightPage: boolean;\n  afterName: string;\n\n  constructor(private service: SubredditServiceService, private route: ActivatedRoute) {\n    this.afterName = null;\n    this.leftPage = true;\n    this.rightPage = true;\n    this.timeString = 'Past 24 hours';\n    this.listingTime = 'day';\n    this.topic = '';\n    this.toggleError = true;\n    this.error = '';\n    this.route.params.subscribe(param => {\n      this.topic = param['topic'];\n    });\n\n    if (this.topic !== ' ') {\n      this.fetchListing(this.topic, this.listingTime);\n    }\n  }\n\n  fetchListing(topic, time = null, after = null) {\n    this.listingTime = time;\n    this.topic = topic;\n    // this.afterName = after;\n    this.service.fetchUReddits(topic, time, after).then((listings) => {\n      if (listings != null && listings.error !== 404) {\n\n        this.afterName = listings.data.after;\n\n        if (this.afterName == null) {\n          this.rightPage = true ;\n        } else {\n          this.rightPage = false ;\n        }\n\n          this.listings = listings.data.children.map((obj) => obj.data).map((obj => {\n            const newObj = obj;\n            newObj.created = new Date(obj.created * 1000).toDateString();\n            return newObj;\n          }));\n        this.toggleError = true;\n      } else {\n        this.error = 'Something went wrong. Please select the keyword judicially.';\n        this.toggleError = false;\n      }\n    }).catch((error) => {\n      this.error = error.toString().split(':')[1];\n      this.toggleError = false;\n    });\n\n  }\n\n  ngOnInit() {\n\n  }\n}\n","import {Injectable} from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SubredditServiceService {\n\n  url: string;\n\n  constructor() {\n    this.url = 'https://www.reddit.com/r/default/top/.json';\n  }\n\n  fetchUReddits(topic, time, after) {\n    let url = this.url;\n    url = url.replace('default', topic) + ((time !== null) ? '?t=' + time : '') + ((after != null) ? '?after=' + after : '');\n    console.log(url);\n    return fetch(url\n    ).then(response => {\n      if (response.headers.get('content-type') != null) {\n        return response.json();\n      } else {\n        return null;\n      }\n    });\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}